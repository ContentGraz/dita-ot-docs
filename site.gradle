buildscript {
    dependencies {
        classpath 'net.sourceforge.saxon:saxon:9.1.0.8'
    }
}

plugins {
    id 'com.github.eerohele.dita-ot-gradle' version '0.3.0'
}

import org.apache.tools.ant.Project as AntProject

buildscript.configurations.classpath.each {
    AntProject.class.getClassLoader().addURL(it.toURL())
}

apply plugin: 'com.github.eerohele.dita-ot-gradle'

defaultTasks 'dita'

// Use the DITA-OT dir defined by the dita.home system property. If undefined,
// assume we're in dita-ot/docsrc and use the parent directory.
def ditaHome = System.getProperty('dita.home', '../')

// Point DITA-OT Gradle Plugin to the DITA-OT directory.
ditaOt.dir ditaHome

def ditaHomeSrc = project.hasProperty("ditaHomeSrc") ? file("${ditaHomeSrc}") : file("${ditaHome}")

task messages {
  inputs.files(
    "${ditaHomeSrc}/resources/messages.xml",
    'resources/messages.xsl'
  )

  outputs.file "${projectDir}/user-guide/DITA-messages.xml"

  doLast {
    ant.ant(antfile: 'build.xml') {
      target name: 'generate-msg-topic'
      property name: 'resource.dir', location: "${ditaHomeSrc}/resources"
    }
  }
}

task params {
  inputs.files (
    "${ditaHomeSrc}/resources/plugins.xml",
    'resources/params.xsl'
  )

  outputs.dir "${projectDir}/parameters"

  doLast {
    ant.ant(antfile: 'build.xml') {
      target name: 'generate-params-topic'
      property name: 'resource.dir', location: "${ditaHomeSrc}/resources" 
    }
  }
}

task extensionPoints {
  inputs.files (
    "${ditaHomeSrc}/resources/plugins.xml",
    'resources/extension-points.xsl'
  )

  outputs.dir "${projectDir}/extension-points"

  doLast {
    ant.ant(antfile: 'build.xml') {
      target name: 'generate-extension-points-topic'
      property name: 'resource.dir', location: "${ditaHomeSrc}/resources"
    }
  }
}

def commit = new ByteArrayOutputStream()

task gitMetadata {
  doLast {
    exec {
        workingDir = "${projectDir}"
        commandLine 'git'
        args = ['rev-parse', 'HEAD']
        standardOutput = commit
    }
  }
}

task generateTopics(dependsOn: ['messages', 'params', 'extensionPoints', 'gitMetadata'])

dita {
    dependsOn 'generateTopics'

    input file('site.ditamap')
    output System.getProperty('output.dir', new File(project.buildDir, 'site').getPath())

    transtype 'org.dita-ot.html'

    properties {
        property name: 'args.gen.task.lbl', value: 'YES'
        property name: 'args.rellinks', value: 'noparent'
        property name: 'commit', value: "${commit}"
    }
}
